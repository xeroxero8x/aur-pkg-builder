name: Build and Release AUR Package

on:
  workflow_dispatch:
    inputs:
      aur_repo_url:
        description: 'URL of the AUR package repository'
        required: true
        default: 'https://aur.archlinux.org/floorp-bin.git'
      release_tag:
        description: 'Tag for the release'
        required: true
        default: 'test'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get remove containerd
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo usermod -aG docker $USER

      - name: Run Arch Linux container and build package
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/pkgs
          docker run --rm --name arch-linux -v ${GITHUB_WORKSPACE}/pkgs:/pkgs archlinux:latest /bin/bash -c "
            pacman -Syu --noconfirm &&
            pacman -S --noconfirm base-devel git sudo &&
            useradd -m builduser &&
            echo 'builduser ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers &&
            su - builduser -c '
              git clone ${{ github.event.inputs.aur_repo_url }} /home/builduser/aur-package &&
              cd /home/builduser/aur-package &&
              makepkg -f --noconfirm
            ' &&
            cp /home/builduser/aur-package/*.pkg.tar.zst /pkgs/
          "

      - name: Upload built packages as artifact
        uses: actions/upload-artifact@v2
        with:
          name: aur-package
          path: ${GITHUB_WORKSPACE}/pkgs/*.pkg.tar.zst

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download built package
        uses: actions/download-artifact@v2
        with:
          name: aur-package
          path: ./pkgs

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          release_name: Release ${{ github.event.inputs.release_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pkgs/*.pkg.tar.zst
          asset_name: aur-package.pkg.tar.zst
          asset_content_type: application/x-tar
