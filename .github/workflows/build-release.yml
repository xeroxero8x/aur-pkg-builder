name: Build and Release AUR Package

on:
  workflow_dispatch:
    inputs:
      aur_repo_url:
        description: 'URL of the AUR package repository'
        required: true
      tag_name:
        description: 'Tag name for the release'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Arch Linux
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git

      - name: Create non-root user
        run: |
          useradd -m builduser
          echo "builduser ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          mkdir -p /home/builduser/aur-package
          chown -R builduser:builduser /home/builduser/aur-package

      - name: Clone AUR package repository
        run: |
          sudo -u builduser git clone ${{ github.event.inputs.aur_repo_url }} /home/builduser/aur-package

      - name: Build the package
        run: |
          cd /home/builduser/aur-package
          sudo -u builduser makepkg -si --noconfirm

      - name: Upload release assets
        uses: actions/upload-artifact@v2
        with:
          name: aur-package
          path: /home/builduser/aur-package/*.pkg.tar.zst

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download built package
        uses: actions/download-artifact@v2
        with:
          name: aur-package
          path: ./release

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Release ${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/*.pkg.tar.zst
          asset_name: aur-package.pkg.tar.zst
          asset_content_type: application/x-tar
